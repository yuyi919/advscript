name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ["16"]
        os: [ubuntu-latest]
    name: Test with Node v${{ matrix.node }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "pnpm"
      - name: Install dependencies
        id: install_code
        run: pnpm install --frozen-lockfile
      - run: pnpm test

  changeset:
    name: Check if version upgrade
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "pnpm"
      - name: Install dependencies
        id: install_code
        run: pnpm install --frozen-lockfile
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Echo if a publish happens
        if: steps.changesets.outputs.published == 'true'
        # You can do something when a publish happens.
        run: echo "A new version of ${GITHUB_REPOSITORY} was published!"
